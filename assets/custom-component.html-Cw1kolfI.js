import{_ as e,r as o,o as c,c as l,a as n,b as s,d as t,e as p}from"./app-BIv4BGsj.js";const i={},u=n("h1",{id:"自定义地图组件",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#自定义地图组件"},[n("span",null,"自定义地图组件")])],-1),r=n("p",null,[n("code",null,"1.1.2版本"),s("开始支持自定义地图组件，通过加载"),n("code",null,"registerMixin"),s("(选项式API)实现自己的组件，"),n("code",null,"2.1.0"),s("版本开始支持通过"),n("code",null,"useRegister"),s("(组合式API)来实现自定义组件。")],-1),k={id:"_1、选项式api",tabindex:"-1"},d={class:"header-anchor",href:"#_1、选项式api"},v=p(`<h3 id="_1-1使用方法" tabindex="-1"><a class="header-anchor" href="#_1-1使用方法"><span>1.1使用方法</span></a></h3><p>首先需要导入 <code>registerMixin</code>，再methods中创建一个__initComponent方法，该方法是子组件被创建时调用，可以使用<code>parentInstance.$amapComponent</code>获取到上级组件的实例对象</p><h3 id="_1-2基础示例代码" tabindex="-1"><a class="header-anchor" href="#_1-2基础示例代码"><span>1.2基础示例代码</span></a></h3><p>创建<code>test.vue</code>组件</p><div class="language-vue line-numbers-mode" data-ext="vue" data-title="vue"><pre class="language-vue"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">&gt;</span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">
<span class="token keyword">import</span> <span class="token punctuation">{</span>registerMixin<span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;@vuemap/vue-amap&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span>defineComponent<span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;vue&quot;</span><span class="token punctuation">;</span>

<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token function">defineComponent</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&quot;test&quot;</span><span class="token punctuation">,</span>
  <span class="token literal-property property">mixins</span><span class="token operator">:</span> <span class="token punctuation">[</span>registerMixin<span class="token punctuation">]</span><span class="token punctuation">,</span>
  <span class="token literal-property property">methods</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token function">__initComponent</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
      console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;this.parentInstance: &#39;</span><span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">.</span>parentInstance<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token keyword">let</span> map <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>parentInstance<span class="token punctuation">.</span>$amapComponent<span class="token punctuation">;</span>
      <span class="token keyword">let</span> position <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>parentInstance<span class="token punctuation">.</span>$amapComponent<span class="token punctuation">.</span><span class="token function">getCenter</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token keyword">let</span> marker <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">AMap<span class="token punctuation">.</span>Marker</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
        <span class="token literal-property property">position</span><span class="token operator">:</span> position
      <span class="token punctuation">}</span><span class="token punctuation">)</span>
      map<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>marker<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>地图加载代码</p><div class="language-vue line-numbers-mode" data-ext="vue" data-title="vue"><pre class="language-vue"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>app<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>el-amap</span> <span class="token attr-name">:center</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>[116.335036, 39.900082]<span class="token punctuation">&quot;</span></span> <span class="token attr-name">:zoom</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>8<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>test</span> <span class="token punctuation">/&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>el-amap</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">&gt;</span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">
<span class="token keyword">import</span> test <span class="token keyword">from</span> <span class="token string">&#39;./components/test.vue&#39;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span>defineComponent<span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;vue&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token function">defineComponent</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&#39;App&#39;</span><span class="token punctuation">,</span>
  <span class="token literal-property property">components</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    test
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span><span class="token punctuation">&gt;</span></span><span class="token style"><span class="token language-css">
<span class="token selector">#app</span> <span class="token punctuation">{</span>
  <span class="token property">height</span><span class="token punctuation">:</span> 600px<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="parentinstance的说明" tabindex="-1"><a class="header-anchor" href="#parentinstance的说明"><span>parentInstance的说明</span></a></h4><p><code>parentInstance</code>通过provide为所有子组件提供实例，parentInstance指向的是最近的一个提供【parentInstance】的vue组件，当前提供parentInstance的组件有以下几个</p><table><thead><tr><th>组件名称</th><th>说明</th></tr></thead><tbody><tr><td>el-amap</td><td>地图组件，根组件存在，提供map实例</td></tr><tr><td>el-loca</td><td>Loca容器，所有loca图层的容器，loca图层必须放在el-loca内</td></tr><tr><td>el-amap-layer-labels</td><td>标号图层，只可以放el-amap-label组件</td></tr><tr><td>el-amap-layer-vector</td><td>矢量图层，只可以放矢量的子图层</td></tr><tr><td>el-amap-layer-three</td><td>三维图层，只可以放el-amap-three-gltf组件</td></tr></tbody></table>`,10),m={id:"_2、组合式api",tabindex:"-1"},g={class:"header-anchor",href:"#_2、组合式api"},b=p(`<h3 id="_2-1使用方法" tabindex="-1"><a class="header-anchor" href="#_2-1使用方法"><span>2.1使用方法</span></a></h3><p>首先需要导入 <code>useRegister</code>，<code>useRegister</code>的第一个参数是创建高德地图组件实例的回调方法，有两个参数，一个是props定义的所有属性和其对应的值，另一个是上级父组件的高德地图实例。 <code>useRegister</code>的第二个参数是一个<code>TInitComponentProps</code>类型，具体参数说明见下表。 <code>useRegister</code>会返回一个对象，包含两个属性，一个是<code>$$getInstance</code>用于获取高德SDK的实例，这个可以通过<code>defineExpose</code>开放出去，第二个是<code>parentInstance</code>，是上级的vue组件实例，可以获取常用的属性。</p><h3 id="_2-2基础示例代码" tabindex="-1"><a class="header-anchor" href="#_2-2基础示例代码"><span>2.2基础示例代码</span></a></h3><p>创建<code>CustomMarker.vue</code>组件</p><div class="language-vue line-numbers-mode" data-ext="vue" data-title="vue"><pre class="language-vue"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">setup</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>ts<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">
  <span class="token keyword">import</span> <span class="token punctuation">{</span>useRegister<span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@vuemap/vue-amap&#39;</span>

  <span class="token function">defineProps</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
    <span class="token literal-property property">position</span><span class="token operator">:</span> <span class="token punctuation">{</span>
      <span class="token literal-property property">type</span><span class="token operator">:</span> Array<span class="token punctuation">,</span>
      <span class="token literal-property property">required</span><span class="token operator">:</span> <span class="token boolean">true</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>

  <span class="token keyword">const</span> emits <span class="token operator">=</span> <span class="token function">defineEmits</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">&#39;init&#39;</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
  <span class="token keyword">let</span> <span class="token literal-property property">$amapComponent</span><span class="token operator">:</span> AMap<span class="token punctuation">.</span>Marker

  <span class="token keyword">const</span> <span class="token punctuation">{</span>$$getInstance<span class="token punctuation">,</span> parentInstance<span class="token punctuation">}</span> <span class="token operator">=</span> useRegister<span class="token operator">&lt;</span>AMap<span class="token punctuation">.</span>Marker<span class="token punctuation">,</span> any<span class="token operator">&gt;</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">options<span class="token punctuation">,</span> parentComponent</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token operator">&lt;</span>AMap<span class="token punctuation">.</span>Marker<span class="token operator">&gt;</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">resolve</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
      $amapComponent <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">AMap<span class="token punctuation">.</span>Marker</span><span class="token punctuation">(</span>options<span class="token punctuation">)</span><span class="token punctuation">;</span>
      parentComponent<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>$amapComponent<span class="token punctuation">)</span>
      <span class="token function">resolve</span><span class="token punctuation">(</span>$amapComponent<span class="token punctuation">)</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>
    emits<span class="token punctuation">,</span>
    <span class="token function">destroyComponent</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>$amapComponent <span class="token operator">&amp;&amp;</span> parentInstance<span class="token operator">?.</span>$amapComponent<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        $amapComponent<span class="token punctuation">.</span><span class="token function">setMap</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        $amapComponent <span class="token operator">=</span> <span class="token keyword">null</span> <span class="token keyword">as</span> any<span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>

  <span class="token function">defineExpose</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
    $$getInstance
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">&gt;</span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span> <span class="token attr-name">scoped</span><span class="token punctuation">&gt;</span></span><span class="token style"><span class="token language-css">

</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>地图加载代码</p><div class="language-vue line-numbers-mode" data-ext="vue" data-title="vue"><pre class="language-vue"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">setup</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>ts<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">
  <span class="token keyword">import</span> <span class="token punctuation">{</span>ref<span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;vue&#39;</span>
  <span class="token keyword">import</span> <span class="token punctuation">{</span>ElAmap<span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;@vuemap/vue-amap&quot;</span><span class="token punctuation">;</span>
  <span class="token keyword">import</span> CustomMarker <span class="token keyword">from</span> <span class="token string">&quot;./components/CustomMarker.vue&quot;</span><span class="token punctuation">;</span>

  <span class="token keyword">const</span> center <span class="token operator">=</span> <span class="token function">ref</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">120</span><span class="token punctuation">,</span> <span class="token number">31</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token special-attr"><span class="token attr-name">style</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span><span class="token value css language-css"><span class="token property">height</span><span class="token punctuation">:</span> 600px</span><span class="token punctuation">&quot;</span></span></span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>el-amap</span> <span class="token attr-name">:center</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>center<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>custom-marker</span> <span class="token attr-name">:position</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>center<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>custom-marker</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>el-amap</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">&gt;</span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span> <span class="token attr-name">scoped</span><span class="token punctuation">&gt;</span></span><span class="token style"><span class="token language-css">
</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">&gt;</span></span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="tinitcomponentprops参数说明" tabindex="-1"><a class="header-anchor" href="#tinitcomponentprops参数说明"><span>TInitComponentProps参数说明</span></a></h4><table><thead><tr><th>参数名称</th><th>说明</th></tr></thead><tbody><tr><td>propsRedirect</td><td>属性名称重定向，有些高德SDK的属性名会与vue默认的prop名称冲突，比如<code>style</code>，这时候就需要自己定义一个新的名称，并传入<code>propsRedirect</code>修改为高德SDK需要的名称。示例： <code>{ styles: &#39;style&#39;}</code></td></tr><tr><td>emits</td><td>defineEmits返回的值，一般至少需要一个init的事件</td></tr><tr><td>converts</td><td>将props属性的值转化为高德需要的值，这个一般用于将经纬度转化为<code>AMap.Lnglat</code>等等，示例：{bounds: (path) =&gt; { return new AMap.Bounds(convertHelper.toLngLat(path[0]), convertHelper.toLngLat(path[1])); }}</td></tr><tr><td>watchRedirectFn</td><td>重写对props属性变化监听的方法，默认情况下组件内部会查找高德SDK里属性的set方法，比如<code>position</code>会查找<code>setPosition</code>，但有些时候我们需要修改这个默认行为，那么就需要传入props名称，前面加上两个下划线，比如：{__position: () =&gt; { xxxx}}，这样组件内部就不会再去找<code>setPosition</code>，而是直接使用<code>__position</code></td></tr><tr><td>destroyComponent</td><td>在销毁组件时需要调用的方法，一般用于从父级中移除对象，比如从高德SDK的地图实例中移除 marker的实例</td></tr></tbody></table>`,9);function y(h,f){const a=o("Badge");return c(),l("div",null,[u,r,n("h2",k,[n("a",d,[n("span",null,[s("1、选项式API "),t(a,{text:"1.1.2+"})])])]),v,n("h2",m,[n("a",g,[n("span",null,[s("2、组合式API "),t(a,{text:"2.1.0+"})])])]),b])}const w=e(i,[["render",y],["__file","custom-component.html.vue"]]);export{w as default};
