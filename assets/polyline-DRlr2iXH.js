import{u as x}from"./useEditor-CRncnCXg.js";import{b as D,u as w,i as k,a as v,d as C,j as F,E as j}from"./index-XVBT3eyP.js";import{p as A,aq as z,_ as P,o as S,c as M,f as B,ag as N,a as g,d as E,w as V,ao as b,al as W}from"./app-BIv4BGsj.js";const $=D({path:{type:Array,required:!0},bubble:{type:Boolean,default:!1},cursor:{type:String},strokeColor:{type:String},strokeOpacity:{type:Number},strokeWeight:{type:Number},borderWeight:{type:Number},isOutline:{type:Boolean,default:!1},outlineColor:{type:String},draggable:{type:Boolean,default:!1},extData:{type:Object,default:()=>null},strokeStyle:{type:String,validator:n=>["solid","dashed"].indexOf(n)!==-1},strokeDasharray:{type:Array},lineJoin:{type:String,validator:n=>["miter","round","bevel"].indexOf(n)!==-1},lineCap:{type:String,validator:n=>["butt","round","square"].indexOf(n)!==-1},geodesic:{type:Boolean,default:!1},showDir:{type:Boolean,default:!1},editable:{type:Boolean,default:!1},editOptions:{type:Object}}),I=A({name:"ElAmapPolyline",inheritAttrs:!1,__name:"Polyline",props:$,emits:["init","update:path"],setup(n,{expose:c,emit:d}){const o=n,l=d;let e;const{$$getInstance:f,parentInstance:i}=w((t,r)=>new Promise(y=>{e=new AMap.Polyline(t),k(r)?r.add(e):v(r)?r.addOverlay(e):C(r)&&r.add(e),m(),y(e)}),{emits:l,watchRedirectFn:{__zIndex(t){e&&e.setOptions({zIndex:t})},__strokeColor(t){e&&e.setOptions({strokeColor:t})},__strokeOpacity(t){e&&e.setOptions({strokeOpacity:t})},__strokeWeight(t){e&&e.setOptions({strokeWeight:t})},__borderWeight(t){e&&e.setOptions({borderWeight:t})},__isOutline(t){e&&e.setOptions({isOutline:t})},__outlineColor(t){e&&e.setOptions({outlineColor:t})},__strokeStyle(t){e&&e.setOptions({strokeStyle:t})},__strokeDasharray(t){e&&e.setOptions({strokeDasharray:t})},__lineJoin(t){e&&e.setOptions({lineJoin:t})},__lineCap(t){e&&e.setOptions({lineCap:t})},__geodesic(t){e&&e.setOptions({geodesic:t})},__showDir(t){e&&e.setOptions({showDir:t})},__editable(t){p().then(()=>{t?a.open():a.close()})}},destroyComponent(){e&&(i!=null&&i.$amapComponent)&&(a&&(i.isDestroy||a.close(),a=null),i.isDestroy||(k(i.$amapComponent)?i.$amapComponent.remove(e):v(i.$amapComponent)?i.$amapComponent.removeOverlay(e):C(i.$amapComponent)&&i.$amapComponent.remove(e)),e.destroy&&e.destroy(),e=null)}}),m=()=>{e.on("dragend",()=>{s(e)}),e.on("touchend",()=>{s(e)})},s=t=>{const r=t.getPath(),y=r==null?void 0:r.map(F);l("update:path",y)};let a;const u=z(),p=()=>new Promise(t=>{a?t():AMap.plugin(["AMap.PolylineEditor"],()=>{a=new AMap.PolylineEditor(i==null?void 0:i.$amapComponent,e,o.editOptions),x(a,u),h(),t()})}),h=()=>{a.on("addnode",t=>{s(t.target)}),a.on("adjust",t=>{s(t.target)}),a.on("removenode",t=>{s(t.target)}),a.on("add",t=>{s(t.target)}),a.on("end",t=>{s(t.target)})};c({$$getInstance:f});const O={props:o,emits:l,get $amapComponent(){return e},set $amapComponent(t){e=t},$$getInstance:f,parentInstance:i,bindModelEvents:m,emitModel:s,get editor(){return a},set editor(t){a=t},attrs:u,createEditor:p,bindEditorModelEvents:h};return Object.defineProperty(O,"__isScriptSetup",{enumerable:!1,value:!0}),O}});function J(n,c,d,o,l,e){return S(),M("div")}const _=P(I,[["render",J],["__file","Polyline.vue"]]);_.install=n=>(n.component(_.name,_),n);const q=_,G=A({__name:"polyline",setup(n,{expose:c}){c();const d=B(15),o=B([121.5273285,31.25515044]),l=N({path:[[121.5389385,31.21515044],[121.5389385,31.29615044],[121.5273285,31.21515044]],editable:!1,visible:!0,draggable:!1}),u={zoom:d,center:o,polyline:l,clickMap:p=>{console.log("click map: ",p)},initMap:p=>{console.log("init map: ",p)},toggleVisible:()=>{l.visible=!l.visible},changeEditable:()=>{l.editable=!l.editable},changeDraggable:()=>{l.draggable=!l.draggable},click:p=>{alert("click GeoJSON")},get ElAmap(){return j},get ElAmapPolyline(){return q}};return Object.defineProperty(u,"__isScriptSetup",{enumerable:!1,value:!0}),u}}),L={class:"map-page-container"},R={class:"toolbar"};function T(n,c,d,o,l,e){return S(),M(W,null,[g("div",L,[E(o.ElAmap,{"show-label":!1,center:o.center,zoom:o.zoom,onClick:o.clickMap,onInit:o.initMap},{default:V(()=>[E(o.ElAmapPolyline,{editable:o.polyline.editable,visible:o.polyline.visible,draggable:o.polyline.draggable,path:o.polyline.path,onClick:o.click},null,8,["editable","visible","draggable","path"])]),_:1},8,["center","zoom"])]),g("div",R,[g("button",{onClick:o.toggleVisible},b(o.polyline.visible?"隐藏标记":"显示标记"),1),g("button",{onClick:o.changeDraggable},b(o.polyline.draggable?"禁止标记移动":"允许标记移动"),1),g("button",{onClick:o.changeEditable},b(o.polyline.editable?"停止编辑":"开始编辑"),1)])],64)}const U=P(G,[["render",T],["__file","polyline.vue"]]);export{U as default};
