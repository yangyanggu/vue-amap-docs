import{u as x}from"./useEditor-CRncnCXg.js";import{b as D,u as w,i as h,a as C,d as B,E as F}from"./index-XVBT3eyP.js";import{p as z,aq as P,_ as E,o as A,c as M,f as k,ag as V,a as g,d as O,w as W,ao as b,al as $}from"./app-BIv4BGsj.js";const j=D({path:{type:Array,required:!0},bubble:{type:Boolean,default:!1},cursor:{type:String},strokeColor:{type:String},strokeOpacity:{type:Number},strokeWeight:{type:Number},borderWeight:{type:Number},isOutline:{type:Boolean,default:!1},outlineColor:{type:String},draggable:{type:Boolean,default:!1},extData:{type:Object,default:()=>null},strokeStyle:{type:String,validator:r=>["solid","dashed"].indexOf(r)!==-1},strokeDasharray:{type:Array},lineJoin:{type:String,validator:r=>["miter","round","bevel"].indexOf(r)!==-1},lineCap:{type:String,validator:r=>["butt","round","square"].indexOf(r)!==-1},geodesic:{type:Boolean,default:!1},showDir:{type:Boolean,default:!1},editable:{type:Boolean,default:!1},editOptions:{type:Object}}),N=z({name:"ElAmapBezierCurve",inheritAttrs:!1,__name:"BezierCurve",props:j,emits:["init","update:path"],setup(r,{expose:c,emit:d}){const o=r,n=d;let e;const{$$getInstance:f,parentInstance:i}=w((t,l)=>new Promise(S=>{e=new AMap.BezierCurve(t),h(l)?l.add(e):C(l)?l.addOverlay(e):B(l)&&l.add(e),m(),S(e)}),{emits:n,watchRedirectFn:{__zIndex(t){e&&e.setOptions({zIndex:t})},__strokeColor(t){e&&e.setOptions({strokeColor:t})},__strokeOpacity(t){e&&e.setOptions({strokeOpacity:t})},__strokeWeight(t){e&&e.setOptions({strokeWeight:t})},__borderWeight(t){e&&e.setOptions({borderWeight:t})},__isOutline(t){e&&e.setOptions({isOutline:t})},__outlineColor(t){e&&e.setOptions({outlineColor:t})},__strokeStyle(t){e&&e.setOptions({strokeStyle:t})},__strokeDasharray(t){e&&e.setOptions({strokeDasharray:t})},__lineJoin(t){e&&e.setOptions({lineJoin:t})},__lineCap(t){e&&e.setOptions({lineCap:t})},__geodesic(t){e&&e.setOptions({geodesic:t})},__showDir(t){e&&e.setOptions({showDir:t})},__editable(t){p().then(()=>{t?a.open():a.close()})}},destroyComponent(){e&&(i!=null&&i.$amapComponent)&&(a&&(i.isDestroy||a.close(),a=null),i.isDestroy||(h(i.$amapComponent)?i.$amapComponent.remove(e):C(i.$amapComponent)?i.$amapComponent.removeOverlay(e):B(i.$amapComponent)&&i.$amapComponent.remove(e)),e.destroy&&e.destroy(),e=null)}}),m=()=>{e.on("dragend",()=>{s(e)}),e.on("touchend",()=>{s(e)})},s=t=>{const l=t.getPath();n("update:path",l)};let a;const u=P(),p=()=>new Promise(t=>{a?t():AMap.plugin(["AMap.BezierCurveEditor"],()=>{a=new AMap.BezierCurveEditor(i==null?void 0:i.$amapComponent,e,o.editOptions),x(a,u),y(),t()})}),y=()=>{a.on("addnode",t=>{s(t.target)}),a.on("adjust",t=>{s(t.target)}),a.on("removenode",t=>{s(t.target)}),a.on("add",t=>{s(t.target)}),a.on("end",t=>{s(t.target)})};c({$$getInstance:f});const v={props:o,emits:n,get $amapComponent(){return e},set $amapComponent(t){e=t},$$getInstance:f,parentInstance:i,bindModelEvents:m,emitModel:s,get editor(){return a},set editor(t){a=t},attrs:u,createEditor:p,bindEditorModelEvents:y};return Object.defineProperty(v,"__isScriptSetup",{enumerable:!1,value:!0}),v}});function I(r,c,d,o,n,e){return A(),M("div")}const _=E(N,[["render",I],["__file","BezierCurve.vue"]]);_.install=r=>(r.component(_.name,_),r);const q=_,J=z({__name:"bezier-curve",setup(r,{expose:c}){c();const d=k(13),o=k([116.397637,39.900001]),n=V({path:[[116.37,39.91],[116.380298,39.907771,116.38,39.9],[116.385298,39.907771,116.4,39.9],[[116.392872,39.887391],[116.40772,39.909252],[116.41,39.89]],[116.423857,39.889498,116.422312,39.899639,116.425273,39.902273]],editable:!1,visible:!0,draggable:!1}),u={zoom:d,center:o,polyline:n,clickMap:p=>{console.log("click map: ",p)},initMap:p=>{console.log("init map: ",p)},changeEditable:()=>{n.editable=!n.editable},toggleVisible:()=>{n.visible=!n.visible},changeDraggable:()=>{n.draggable=!n.draggable},click:p=>{alert("click BezierCurve")},get ElAmap(){return F},get ElAmapBezierCurve(){return q}};return Object.defineProperty(u,"__isScriptSetup",{enumerable:!1,value:!0}),u}}),R={class:"map-page-container"},G={class:"toolbar"};function L(r,c,d,o,n,e){return A(),M($,null,[g("div",R,[O(o.ElAmap,{"show-label":!1,center:o.center,zoom:o.zoom,onClick:o.clickMap,onInit:o.initMap},{default:W(()=>[O(o.ElAmapBezierCurve,{editable:o.polyline.editable,visible:o.polyline.visible,"stroke-weight":6,draggable:o.polyline.draggable,path:o.polyline.path,onClick:o.click},null,8,["editable","visible","draggable","path"])]),_:1},8,["center","zoom"])]),g("div",G,[g("button",{onClick:o.toggleVisible},b(o.polyline.visible?"隐藏标记":"显示标记"),1),g("button",{onClick:o.changeDraggable},b(o.polyline.draggable?"禁止标记移动":"允许标记移动"),1),g("button",{onClick:o.changeEditable},b(o.polyline.editable?"停止编辑":"开始编辑"),1)])],64)}const Q=E(J,[["render",L],["__file","bezier-curve.vue"]]);export{Q as default};
