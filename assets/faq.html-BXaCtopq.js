import{_ as p,r as t,o,c as l,a,b as s,d as i,e as n}from"./app-BIv4BGsj.js";const c={},r=n('<h1 id="常见问题" tabindex="-1"><a class="header-anchor" href="#常见问题"><span>常见问题</span></a></h1><hr><p>下面主要记录在使用<code>@vuemap/vue-amap</code>时经常碰到的问题和解决方案。</p><h2 id="地图不加载" tabindex="-1"><a class="header-anchor" href="#地图不加载"><span>地图不加载</span></a></h2><p>在地图组件已经在main.js中引入并且初始化的前提下出现地图不加载情况，按下面步骤进行检查</p><ul><li>检查el-amap父容器（div）是否有高度，可以使用浏览器的F12检查</li><li>项目中是否使用mockjs去拦截所有请求，mock功能有可能会拦截地图的加载请求</li><li>地图使用的key必须是Web端(JS API)</li></ul><h2 id="地图接口提示-invalid-user-scode" tabindex="-1"><a class="header-anchor" href="#地图接口提示-invalid-user-scode"><span>地图接口提示 INVALID_USER_SCODE</span></a></h2>',7),d=a("code",null,"INVALID_USER_SCODE",-1),u=a("code",null,"initAMapApiLoader",-1),k={href:"https://lbs.amap.com/api/jsapi-v2/guide/abc/load",target:"_blank",rel:"noopener noreferrer"},m=n(`<div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="token function">initAMapApiLoader</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  <span class="token literal-property property">key</span><span class="token operator">:</span> <span class="token string">&#39;YOUR_KEY&#39;</span><span class="token punctuation">,</span>
  <span class="token literal-property property">serviceHost</span><span class="token operator">:</span> <span class="token string">&#39;HOST&#39;</span><span class="token punctuation">,</span>
  <span class="token literal-property property">securityJsCode</span><span class="token operator">:</span> <span class="token string">&#39;CODE&#39;</span> <span class="token comment">// serviceHost与securityJsCode二选一</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="ts提示amap找不到" tabindex="-1"><a class="header-anchor" href="#ts提示amap找不到"><span>TS提示AMap找不到</span></a></h2><p>在使用TS开发地图时，一旦使用了原生AMap会提示AMap找不到，可以在自己的全局的.d.ts文件中加上</p><div class="language-typescript line-numbers-mode" data-ext="ts" data-title="ts"><pre class="language-typescript"><code><span class="token keyword">declare</span> <span class="token keyword">let</span> AMap<span class="token operator">:</span> <span class="token builtin">any</span><span class="token punctuation">;</span>
<span class="token keyword">declare</span> <span class="token keyword">let</span> Loca<span class="token operator">:</span> <span class="token builtin">any</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="自动导入失败" tabindex="-1"><a class="header-anchor" href="#自动导入失败"><span>自动导入失败</span></a></h2><p>在使用<code>unplugin-vue-components</code> 、 <code>unplugin-auto-import</code> 、 <code>@vuemap/unplugin-resolver</code>做组件自动导入功能的时候出现报错或者自动导入不生效</p><p>当出现报错时：</p><div class="language-text line-numbers-mode" data-ext="text" data-title="text"><pre class="language-text"><code>/* unplugin-vue-components disabled */import { ElAmap as __unplugin_components_0 } from &#39;element-plus/es&#39;;import &#39;element-plus/es/components/amap/style/css&#39;; ^
import { ref } from &#39;vue&#39;;
import { defineComponent as _defineComponent } from &quot;vue&quot;;
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>出现该报错是因为使用了<code>ElementPlusResolver</code>，使用该resolver时需要添加过滤参数：</p><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="token function">ElementPlusResolver</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
        <span class="token literal-property property">exclude</span><span class="token operator">:</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">^ElAmap[A-Z]*</span><span class="token regex-delimiter">/</span></span>
      <span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>当出现自动导入没有生效时，基本都是因为使用了tsx的原因，<code>unplugin-vue-components</code>默认不检查<code>.tsx</code>后缀的文件，需要在初始化的时候加上参数：</p><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="token function">Components</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  <span class="token literal-property property">resolvers</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token function">VueAmapResolver</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
  <span class="token literal-property property">include</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">\\.vue$</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">,</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">\\.vue\\?vue</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">,</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">\\.tsx$</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">,</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">\\.tsx\\?tsx</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">]</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="地图拖拽卡顿" tabindex="-1"><a class="header-anchor" href="#地图拖拽卡顿"><span>地图拖拽卡顿</span></a></h2><p>当出现地图拖拽卡顿时可以从以下几个方向检查</p><ul><li>地图的实例map对象是否被vue管理，比如赋值给ref或者reactive</li><li>地图上的marker组件是否过多，marker是基于dom实现，当点位太多时会导致拖拽卡顿，比如几百个点</li><li>loca下的图层是否很多，当图层太多时，可以把不需要事件的图层组件的initEvents属性设置为false，默认情况下每个loca下的组件都会启动事件功能</li></ul><h2 id="地图标点误差很大" tabindex="-1"><a class="header-anchor" href="#地图标点误差很大"><span>地图标点误差很大</span></a></h2><p>windows 11兼容性不好，导致系统缩放是自定义，地图缩放是100%。在设置-&gt;系统-&gt;屏幕，找到缩放，调整回100%即可。</p>`,17);function v(g,x){const e=t("ExternalLinkIcon");return o(),l("div",null,[r,a("p",null,[s("地图接口提示"),d,s("时代表初始化地图的时候没有配置安全密钥或者安全代理，可以在"),u,s("时候传入相应参数， 配置安全密钥或者安全代理只需要配置一个即可，推荐配置安全代理。"),a("a",k,[s("官方文档地址"),i(e)]),s("，示例：")]),m])}const b=p(c,[["render",v],["__file","faq.html.vue"]]);export{b as default};
