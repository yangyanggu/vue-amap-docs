import{b as Z,u as z,E as N}from"./index-XVBT3eyP.js";import{p as j,_ as F,o as h,c as P,f as b,a as i,d as R,w as V,q,s as G,ao as U,al as W}from"./app-BIv4BGsj.js";const L=j({name:"ElAmapMouseTool",inheritAttrs:!1,__name:"MouseTool",props:Z({type:{type:String,required:!0,default:"marker",validator:c=>["marker","circle","rectangle","polyline","polygon","measureArea","rule","rectZoomIn","rectZoomOut"].includes(c)},drawOptions:{type:Object,default:()=>null},autoClear:{type:Boolean,default:!0},showTooltip:{type:Boolean,default:!0},tooltipTextMap:{type:Object,default:()=>null},textOptions:{type:Object,default:()=>null},drawCursor:{type:String,default:"crosshair"}}),emits:["init","draw"],setup(c,{expose:r,emit:y}){const t=c,m=y;let a,s="";const C={marker:"单击地图选择点位",circle:"按住鼠标左键拖拽绘制圆",rectangle:"按住鼠标左键拖拽绘制矩形",polyline:"单击地图选择拐点，双击地图完成折线绘制",polygon:"单击地图选择拐点，双击地图完成多边形绘制",measureArea:"单击地图选择拐点，双击地图完成绘制并计算面积",rule:"单击地图选择拐点，右击地图完成绘制并计算距离",rectZoomIn:"按住鼠标左键拖拽绘制矩形，松开左键放大地图",rectZoomOut:"按住鼠标左键拖拽绘制矩形，松开左键放大地图"};let d=!0;const g=()=>{if(!d)return;const e=t.type;if(a[e]){const n=t.drawOptions||{};a[e](n),T(C[e])}},{$$getInstance:M,parentInstance:o}=z((e,n)=>new Promise(u=>{AMap.plugin(["AMap.MouseTool"],()=>{t.tooltipTextMap&&Object.assign(C,t.tooltipTextMap),a=new AMap.MouseTool(n),s=n.getDefaultCursor(),x(),g(),$(),w(),u(a)})}),{emits:m,watchRedirectFn:{__type:g},destroyComponent(){a&&(o!=null&&o.$amapComponent)&&(o!=null&&o.isDestroy||(a.close(!0),E(),l&&(o.$amapComponent.off("mousemove",A),o.$amapComponent.remove(l),l=null)),a=null)}});let l;const x=()=>{if(t.showTooltip){const e=t.textOptions||{};e.anchor="top-left",e.clickable=!1,e.bubble=!0,e.offset=[10,10],l=new AMap.Text(e),o==null||o.$amapComponent.add(l),o==null||o.$amapComponent.on("mousemove",A)}},A=e=>{const n=e.lnglat;l.setPosition([n.lng,n.lat])},T=e=>{l&&l.setText(e)},$=()=>{a.on("draw",e=>{const n=t.type;let u;if(n==="marker")u=e.obj.getPosition().toArray();else if(n==="circle")u={center:e.obj.getCenter().toArray(),radius:e.obj.getRadius()};else if(n==="rectangle"){const f=e.obj.getBounds(),p=f.getSouthWest(),S=f.getNorthEast();u=[p.toArray(),S.toArray()]}else if(n==="polyline")u=e.obj.getPath().map(p=>p.toArray());else if(n==="polygon")u=e.obj.getPath().map(p=>p.toArray());else if(n==="measureArea"){const f=e.obj.getPath().map(p=>p.toArray());u=AMap.GeometryUtil.ringArea(f)}else if(n==="rule"){const f=e.obj.getPath().map(p=>p.toArray());u=AMap.GeometryUtil.distanceOfLine(f)}else(n==="rectZoomIn"||n==="rectZoomOut")&&(u=!0);m("draw",u,e.obj),t.autoClear&&(v(),g())})},_=(e=!0)=>{a.close(e)},D=(e=!0)=>{d=!1,a&&(_(e),E(),l&&l.hide())},B=()=>{d=!0,w(),g(),l&&l.show()},v=()=>{_(!0)},w=()=>{o==null||o.$amapComponent.setDefaultCursor(t.drawCursor)},E=()=>{s&&(o==null||o.$amapComponent.setDefaultCursor(s))};r({$$getInstance:M,$$open:B,$$close:D,$$clear:v});const O={props:t,emits:m,get $amapComponent(){return a},set $amapComponent(e){a=e},get preMapCursor(){return s},set preMapCursor(e){s=e},tipTexts:C,get isDrawing(){return d},set isDrawing(e){d=e},__type:g,$$getInstance:M,parentInstance:o,get $text(){return l},set $text(e){l=e},createTooltip:x,getMousePosition:A,setText:T,bindEvent:$,_close:_,$$close:D,$$open:B,$$clear:v,changeMapCursor:w,revertMapCursor:E};return Object.defineProperty(O,"__isScriptSetup",{enumerable:!1,value:!0}),O}});function H(c,r,y,t,m,a){return h(),P("div")}const k=F(L,[["render",H],["__file","MouseTool.vue"]]);k.install=c=>(c.component(k.name,k),c);const J=k,K=j({__name:"mouse-tool",setup(c,{expose:r}){r();const y=b([121.5273285,31.21515044]),t=b(16),m=b("marker"),a=b(!0),M={center:y,zoom:t,type:m,created:a,clickMap:o=>{console.log("click map: ",o)},initMap:o=>{console.log("init map: ",o)},draw:(o,l)=>{console.log("绘制完成 : ",o,l)},changeMarker:o=>{m.value=o},get ElAmap(){return N},get ElAmapMouseTool(){return J}};return Object.defineProperty(M,"__isScriptSetup",{enumerable:!1,value:!0}),M}}),Q={class:"map-page-container"},X={class:"toolbar"};function Y(c,r,y,t,m,a){return h(),P(W,null,[i("div",Q,[R(t.ElAmap,{"show-label":!1,center:t.center,zoom:t.zoom,onClick:t.clickMap,onInit:t.initMap},{default:V(()=>[t.created?(h(),q(t.ElAmapMouseTool,{key:0,type:t.type,"auto-clear":!0,onDraw:t.draw},null,8,["type"])):G("",!0)]),_:1},8,["center","zoom"])]),i("div",X,[i("button",{onClick:r[0]||(r[0]=s=>t.created=!t.created)},U(t.created?"销毁":"创建"),1),i("button",{onClick:r[1]||(r[1]=s=>t.changeMarker("marker"))}," 绘制标号 "),i("button",{onClick:r[2]||(r[2]=s=>t.changeMarker("circle"))}," 绘制圆 "),i("button",{onClick:r[3]||(r[3]=s=>t.changeMarker("rectangle"))}," 绘制矩形 "),i("button",{onClick:r[4]||(r[4]=s=>t.changeMarker("polyline"))}," 绘制线 "),i("button",{onClick:r[5]||(r[5]=s=>t.changeMarker("polygon"))}," 绘制面 "),i("button",{onClick:r[6]||(r[6]=s=>t.changeMarker("measureArea"))}," 计算面积 "),i("button",{onClick:r[7]||(r[7]=s=>t.changeMarker("rule"))}," 计算距离 "),i("button",{onClick:r[8]||(r[8]=s=>t.changeMarker("rectZoomIn"))}," 框选放大地图 "),i("button",{onClick:r[9]||(r[9]=s=>t.changeMarker("rectZoomOut"))}," 框选缩小地图 ")])],64)}const te=F(K,[["render",Y],["__file","mouse-tool.vue"]]);export{te as default};
